version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: quickshop_postgres
    environment:
      POSTGRES_DB: quickshop
      POSTGRES_USER: quickshop_user
      POSTGRES_PASSWORD: quickshop_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quickshop_user -d quickshop"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: quickshop_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quickshop_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://quickshop_user:quickshop_pass@postgres:5432/quickshop
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - STRIPE_SECRET_KEY=sk_test_placeholder
      - STRIPE_WEBHOOK_SECRET=whsec_placeholder
      - SENDGRID_API_KEY=SG.placeholder
      - FROM_EMAIL=noreply@quickshop.com
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quickshop_frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_STRIPE_PUBLISHABLE_KEY=pk_test_placeholder
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: quickshop_network