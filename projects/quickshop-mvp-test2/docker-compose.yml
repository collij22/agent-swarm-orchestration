version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: quickshop_db
    environment:
      POSTGRES_DB: quickshop
      POSTGRES_USER: quickshop_user
      POSTGRES_PASSWORD: quickshop_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quickshop_user -d quickshop"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: quickshop_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quickshop_backend
    environment:
      DATABASE_URL: postgresql://quickshop_user:quickshop_pass@db:5432/quickshop
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key
      SENDGRID_API_KEY: SG.your_sendgrid_api_key
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quickshop_frontend
    environment:
      VITE_API_URL: http://localhost:8000
      VITE_STRIPE_PUBLISHABLE_KEY: pk_test_your_stripe_publishable_key
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: quickshop_network